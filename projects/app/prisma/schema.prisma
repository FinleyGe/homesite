// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native", "debian-openssl-3.0.x", "debian-openssl-1.1.x"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(cuid())
  email     String   @unique
  name      String?
  password  String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  Post      Post[]
}

model Post {
  id        String   @id @default(cuid())
  content   String
  language  String?
  author    User     @relation(fields: [authorId], references: [id])
  authorId  String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model TodoList {
  id        String   @id @default(cuid())
  content   String
  endTime   String?
  done      Boolean  @default(false)
  priority  Int      @default(0)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  tags      Tag[]
}

model Tomato {
  id        String   @id @default(cuid())
  focusOn   String?
  createdAt DateTime @default(now())
  score     Int      @default(0)
  tags      Tag[]
}

model Tag {
  id   String @id @default(cuid())
  name String

  TodoList TodoList[]
  Tomato       Tomato[]
  Collection Collection[]
}

model Collection {
  id        String   @id @default(cuid())
  content   String
  from      String?
  tags      Tag[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
	@@map("Collective")
}
